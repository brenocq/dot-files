# Enable mouse support
set -g mouse on
set-option -g extended-keys on
set-option -g default-terminal "tmux-256color"

# Move status to top
set-option -g status-position top

# -----------------------------------------------------------------------------
# -- Pane Management --
# -----------------------------------------------------------------------------

# --- Pane Navigation ---
# Enable Vim-style pane navigation without prefix
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# --- Pane Creation ---
# Create panes with a similar ergonomic layout
bind-key h split-window -h -b -c "#{pane_current_path}" # To the left
bind-key j split-window -c "#{pane_current_path}"      # Down
bind-key k split-window -b -c "#{pane_current_path}"   # Up  (FIX NOT WORKING)
bind-key l split-window -h -c "#{pane_current_path}"   # To the right

# --- Pane Closing ---
# Close a pane with q
bind-key q kill-pane

# -----------------------------------------------------------------------------
# -- Window Management --
# -----------------------------------------------------------------------------

# Create a new window with Enter, in the same directory as the current pane
bind-key Enter new-window -c "#{pane_current_path}"

# Rename the current window with C-r
bind-key r command-prompt -I "#{window_name}" "rename-window -- '%%'"

# --- Window Navigation ---
# Go to the window on the right
bind-key i next-window
bind-key o next-window
# Go to the window on the left
bind-key y previous-window
bind-key u previous-window

# -----------------------------------------------------------------------------
# -- Extras --
# -----------------------------------------------------------------------------
# Reload tmux to C-r
bind-key -n C-r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

