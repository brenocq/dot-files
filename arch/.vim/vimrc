"----------- Plugvim ------------
":PlugInstall
call plug#begin()
Plug 'scrooloose/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'sheerun/vim-polyglot'
Plug 'morhetz/gruvbox'
Plug 'easymotion/vim-easymotion'
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
Plug 'iamcco/markdown-preview.vim' 
Plug 'rhysd/vim-clang-format'
Plug 'powerman/vim-plugin-AnsiEsc'
call plug#end()
set tags=./tags;/

"----------- NerdTree -----------
syntax on
filetype plugin indent on
nnoremap <C-n> :NERDTreeToggle<CR>

"---------- Theme ---------
colorscheme gruvbox
set bg=dark

"---------- Window style ---------
let mapleader = "'"
set number
set relativenumber
set iskeyword&
set hlsearch
nnoremap ; :
set encoding=UTF-8

"----- Tabs
nnoremap <leader>t :tabedit<CR>

"----- Close brackets
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

"------ Window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

"------ Folding
nnoremap <leader>c zfa}
nnoremap <leader>o zo

"---------- Motion + Writing ---------
let g:EasyMotion_do_mapping = 0 " Disable default mappings
nmap s <Plug>(easymotion-overwin-f2)
nnoremap <leader>k <c-u>
nnoremap <leader>j <c-d>

" Copy/paste clipboard
vmap <leader>c :w !xclip -sel clip<CR><CR>
nnoremap <leader>v :r !xclip -o -sel clip<CR>

"----------- Code style ------------
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

set cindent
set cinoptions=g0

autocmd FileType h,hpp,c,cpp nnoremap <leader>f :<C-u>ClangFormat<CR>
autocmd FileType h,hpp,c,cpp vnoremap <leader>f :ClangFormat<CR>
let g:clang_format#detect_style_file = 1
autocmd FileType ts,js,py,json nnoremap <leader>f mfgg=G`f

"----------- Syntax ------------
" Asm
augroup twig_ft
  au!
  autocmd BufNewFile,BufRead *.s set syntax=asm
augroup END

" Vulkan
autocmd FileType cpp,c source ~/.vim/syntax/vulkan.vim

" Spell check
set spell spelllang=en_us

" Markdown
noremap <leader>m :MarkdownPreview<Enter>

" Clang format
let g:clang_format#style_options = {
            \ "Language": "Cpp",
            \ "BasedOnStyle": "LLVM",
            \ "PointerAlignment": "Left",
            \ "AlwaysBreakTemplateDeclarations": "true",
            \ "ColumnLimit": 150,
            \ "IndentWidth": 4,
            \ "IndentCaseLabels": "true"}

" Git diff
autocmd FileType diff AnsiEsc

"----------- Code Generation ------------
" Guide navigation
noremap <leader><Tab> <Esc>/<++><Enter>cf>
inoremap <leader><Tab> <Esc>/<++><Enter>cf>
vnoremap <leader><Tab> <Esc>/<++><Enter>cf>
" Nohighligig
noremap <leader>h :set hlsearch!<CR>

" C++
autocmd FileType cpp,c inoremap ,fun (<++>)<CR>{<CR><++><CR><Backspace><Backspace>}<CR><CR><++><Esc>?(<++>)<CR>i
autocmd FileType cpp,c inoremap ,if if(<++>)<CR>{<CR><++><CR><Backspace><Backspace>}<CR><CR><++><Esc>?<++>)<CR>cf>
autocmd FileType cpp,c inoremap ,while while(<++>)<CR>{<CR><++><CR><Backspace><Backspace>}<CR><CR><++><Esc>?<++>)<CR>cf>
autocmd FileType cpp,c inoremap ,for for(<++>; <++>; <++>)<CR>{<CR><++><CR><Backspace><Backspace>}<CR><CR><++><Esc>?<++>)<CR>cf>
